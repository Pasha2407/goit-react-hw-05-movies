{"version":3,"file":"static/js/135.6497fe29.chunk.js","mappings":"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","sources":["components/Loader.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#be4040\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Wrapper\":\"MovieDetails_Wrapper__1xf4e\",\"Container\":\"MovieDetails_Container__nukdg\"};","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../components/api';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport css from './MovieDetails.module.css';\nimport { Loader } from 'components/Loader';\n\nconst MovieDetails = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [movieDetails, setMovieDetails] = useState([]);\n  const { id } = useParams();\n  const location = useLocation();\n  const back = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const movieDetails = async () => {\n      try {\n        const movie = await fetchMovieDetails(id);\n        setMovieDetails(movie);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 700);\n      }\n    };\n    movieDetails();\n  }, [id]);\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <div\n      style={{\n        backgroundImage:\n          'url(' +\n          `https://image.tmdb.org/t/p/w500${movieDetails.backdrop_path}` +\n          ')',\n        backgroundSize: '80%',\n        backgroundPositionX: 'center',\n        backgroundPositionY: '100px',\n        backgroundRepeat: 'no-repeat',\n        backgroundAttachment: 'fixed',\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: 'rgba(255, 255, 255, 0.4)',\n          backdropFilter: 'blur(5px)',\n        }}\n      >\n        <div className={css.Wrapper}>\n          <Link to={back.current}>Go back</Link>\n          <div className={css.Container}>\n            <aside>\n              <img\n                src={\n                  movieDetails.poster_path\n                    ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                    : require('../../components/images/noimage2.jpg')\n                }\n                alt={movieDetails.title}\n                style={{\n                  width: 200,\n                }}\n              />\n            </aside>\n            <div>\n              <h2>{movieDetails.title}</h2>\n              <b>User score: {movieDetails.vote_average}</b>\n              <h3>Overview</h3>\n              <p>{movieDetails.overview}</p>\n              <h3>Genres</h3>\n              <p>\n                {movieDetails.genres?.map(item => (\n                  <span key={item.id}> {item.name}</span>\n                ))}\n              </p>\n              <h3>Production companies</h3>\n              <section>\n                {movieDetails.production_companies?.map(\n                  item =>\n                    item.logo_path && (\n                      <img\n                        key={item.id}\n                        src={`https://image.tmdb.org/t/p/w500${item.logo_path}`}\n                        alt={item.name}\n                        style={{ width: 70 }}\n                      ></img>\n                    )\n                )}\n              </section>\n              <b>Release date: {movieDetails.release_date}</b>\n            </div>\n          </div>\n          <div>\n            <h2>Additional information</h2>\n            <Link to=\"cast\">Cast</Link>\n            <Link to=\"reviews\">Reviews</Link>\n          </div>\n          <Suspense\n            fallback={\n              <p style={{ paddingLeft: 30 }}>\n                <i>Loading...</i>\n              </p>\n            }\n          >\n            <Outlet />\n          </Suspense>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Loader","_jsx","style","display","justifyContent","children","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","_location$state","_movieDetails$genres","_movieDetails$product","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","movieDetails","setMovieDetails","id","useParams","location","useLocation","back","useRef","state","from","useEffect","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie","_context","prev","next","fetchMovieDetails","sent","t0","console","error","setTimeout","finish","stop","apply","arguments","backgroundImage","concat","backdrop_path","backgroundSize","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundAttachment","backgroundColor","backdropFilter","_jsxs","className","css","Link","to","current","src","poster_path","require","alt","title","vote_average","overview","genres","map","item","name","production_companies","logo_path","release_date","Suspense","fallback","paddingLeft","Outlet"],"sourceRoot":""}