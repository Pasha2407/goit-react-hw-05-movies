{"version":3,"file":"static/js/134.f5a04b6a.chunk.js","mappings":"0OAwDA,UAlDe,WACb,IAAAA,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA3CG,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAkCJ,EAAAA,EAAAA,YAAUK,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAArCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,EAAYX,EAAaY,IAAI,UAAY,GA0B/C,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAM,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEQ,OAFRF,EAAAC,KAAA,EAEXX,GAAa,GAAMU,EAAAE,KAAA,GACEC,EAAAA,EAAAA,IAAaZ,GAAW,KAAD,EAAtCQ,EAAMC,EAAAI,KACZlB,EAAea,GAAQC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEvBM,QAAQC,MAAKP,EAAAK,IAAQ,QAED,OAFCL,EAAAC,KAAA,GAErBX,GAAa,GAAOU,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAEvB,kBAVW,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAWZjB,GACF,GAAG,CAACH,KAGFqB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,IAAKC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEI,OAAQ,GAAIF,SAAC,kBAC1BH,EAAAA,EAAAA,MAAA,QAAMM,SA3BW,SAAAC,GACnBA,EAAMC,iBACN,IACMC,EADOF,EAAMG,cACAC,SAAS7B,OAAO8B,MAAMC,cACzC,GAAqB,KAAjBJ,EAAMK,OAAe,OAAOC,MAAM,oBACtC9C,EAAgB,CAAEwC,MAAAA,IAClBF,EAAMS,OAAOC,OACf,EAoBiCd,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOc,KAAK,OAAOC,YAAY,YAAYC,KAAK,YAChDhB,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAAQf,SAAC,cAOvB1B,GAAY2B,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,KAAMjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CAACnC,OAAQd,KAC3CI,GAAoC,IAAvBJ,EAAYkD,QAAgB5C,IACzCqB,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CAAI,mCAAiCxB,EAAU,SAIvD,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'components/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState();\n  const movieName = searchParams.get('query') || '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const query = form.elements.search.value.toLowerCase();\n    if (query.trim() === '') return alert('Can not be empty');\n    setSearchParams({ query });\n    event.target.reset();\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await searchMovies(movieName);\n        setFoundMovies(movies);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    search();\n  }, [movieName]);\n\n  return (\n    <div style={{ padding: 30 }}>\n      <h2 style={{ margin: 0 }}>Movie Search</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"type here\" name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {/* {foundMovies.length === 0 ? (\n        <p>please search</p>\n      ) : (\n        <MovieList movies={foundMovies} />\n      )} */}\n      {isLoading ? <Loader /> : <MovieList movies={foundMovies} />}\n      {!isLoading && foundMovies.length === 0 && movieName && (\n        <h2>No movie found for the request \"{movieName}\"</h2>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","foundMovies","setFoundMovies","_useState3","_useState4","isLoading","setIsLoading","movieName","get","useEffect","search","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movies","_context","prev","next","searchMovies","sent","t0","console","error","finish","stop","apply","arguments","_jsxs","style","padding","children","_jsx","margin","onSubmit","event","preventDefault","query","currentTarget","elements","value","toLowerCase","trim","alert","target","reset","type","placeholder","name","Loader","MovieList","length"],"sourceRoot":""}